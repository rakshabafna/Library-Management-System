/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import java.awt.BorderLayout;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import view.BrowseBooks.Book;
import java.sql.*;
import java.util.*;
import javax.swing.JFrame;
import javax.swing.JPanel;
import static model.DBconnection.getConnection;

/**
 *
 * @author raksha
 */
public class UserDashboard extends javax.swing.JFrame {
    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(UserDashboard.class.getName());

    /**
     * Creates new form UserDashboard
     */
    private int userId;
    private String userMobile;
    private int bookId;
    Book book;
    public UserDashboard(int userId,String userMobile) {
        initComponents();
        
        this.userId = userId;
        this.userMobile = userMobile;
        
        OverviewU overU=new OverviewU();
        mainPanel.removeAll();
        mainPanel.setLayout(new BorderLayout());
        mainPanel.add(overU,BorderLayout.CENTER);
        mainPanel.revalidate();
        mainPanel.repaint();
        this.setExtendedState(JFrame.MAXIMIZED_BOTH);
        this.setVisible(true);
        
    }

/*public void setUserMobile(String mobile) {
    this.userMobile = mobile;
}*/



    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        sidePanel = new javax.swing.JPanel();
        btnMyBooks = new javax.swing.JButton();
        btnIssuedBooks = new javax.swing.JButton();
        btnMyProfile = new javax.swing.JButton();
        btnLogout = new javax.swing.JButton();
        btnBrowseBooks = new javax.swing.JButton();
        mainPanel = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(238, 222, 246));
        jPanel1.setPreferredSize(new java.awt.Dimension(1200, 700));

        sidePanel.setBackground(new java.awt.Color(47, 47, 47));
        sidePanel.setPreferredSize(new java.awt.Dimension(219, 583));

        btnMyBooks.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        btnMyBooks.setIcon(new javax.swing.ImageIcon(getClass().getResource("/src/assets/stack-of-books (1).png"))); // NOI18N
        btnMyBooks.setText("My Books");
        btnMyBooks.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMyBooksActionPerformed(evt);
            }
        });

        btnIssuedBooks.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        btnIssuedBooks.setIcon(new javax.swing.ImageIcon(getClass().getResource("/src/assets/search (1).png"))); // NOI18N
        btnIssuedBooks.setText("Issued Books");
        btnIssuedBooks.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIssuedBooksActionPerformed(evt);
            }
        });

        btnMyProfile.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        btnMyProfile.setIcon(new javax.swing.ImageIcon(getClass().getResource("/src/assets/group.png"))); // NOI18N
        btnMyProfile.setText("My Profile");
        btnMyProfile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMyProfileActionPerformed(evt);
            }
        });

        btnLogout.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        btnLogout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/src/assets/logout (1).png"))); // NOI18N
        btnLogout.setText("Logout");
        btnLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogoutActionPerformed(evt);
            }
        });

        btnBrowseBooks.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        btnBrowseBooks.setText("Browse Books");
        btnBrowseBooks.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBrowseBooksActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout sidePanelLayout = new javax.swing.GroupLayout(sidePanel);
        sidePanel.setLayout(sidePanelLayout);
        sidePanelLayout.setHorizontalGroup(
            sidePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sidePanelLayout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(sidePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnLogout)
                    .addComponent(btnBrowseBooks)
                    .addComponent(btnMyBooks)
                    .addComponent(btnIssuedBooks)
                    .addComponent(btnMyProfile))
                .addContainerGap(41, Short.MAX_VALUE))
        );

        sidePanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnBrowseBooks, btnIssuedBooks, btnLogout, btnMyBooks, btnMyProfile});

        sidePanelLayout.setVerticalGroup(
            sidePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sidePanelLayout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addComponent(btnBrowseBooks)
                .addGap(44, 44, 44)
                .addComponent(btnMyBooks)
                .addGap(50, 50, 50)
                .addComponent(btnIssuedBooks)
                .addGap(51, 51, 51)
                .addComponent(btnMyProfile)
                .addGap(56, 56, 56)
                .addComponent(btnLogout)
                .addContainerGap())
        );

        mainPanel.setBackground(new java.awt.Color(112, 130, 56));
        mainPanel.setPreferredSize(new java.awt.Dimension(881, 0));
        mainPanel.setLayout(new java.awt.BorderLayout());

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/src/assets/hamburger (1).png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(sidePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 865, Short.MAX_VALUE)
                        .addGap(104, 104, 104))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(sidePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 583, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(83, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnIssuedBooksActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIssuedBooksActionPerformed
    List<Book> books = fetchIssuedBooksByUser(userId);
    myissuedbooks issuedPanel = new myissuedbooks(books, userId, mainPanel);

    mainPanel.removeAll();
    mainPanel.setLayout(new BorderLayout());
    mainPanel.add(issuedPanel, BorderLayout.CENTER);
    mainPanel.revalidate();
    mainPanel.repaint();
    }//GEN-LAST:event_btnIssuedBooksActionPerformed

    private void btnBrowseBooksActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBrowseBooksActionPerformed
    BrowseBooks browsebookpanel =new BrowseBooks(this.mainPanel,this.userId);
    mainPanel.removeAll();
    mainPanel.setLayout(new BorderLayout());
    mainPanel.add(browsebookpanel);
    mainPanel.revalidate();
    mainPanel.repaint();
    }//GEN-LAST:event_btnBrowseBooksActionPerformed
     
    private boolean isMenuOpen=true;
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        isMenuOpen = !isMenuOpen;
        sidePanel.setVisible(isMenuOpen);
        revalidate();
        repaint();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogoutActionPerformed
        int choice = JOptionPane.showConfirmDialog(this, 
        "Are you sure you want to logout?", 
        "Confirm Logout", 
        JOptionPane.YES_NO_OPTION);

if (choice == JOptionPane.YES_OPTION) {
    this.dispose();
    new Login().setVisible(true);
}

    }//GEN-LAST:event_btnLogoutActionPerformed

    private void btnMyProfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMyProfileActionPerformed
Profile profilepanel=new Profile(userMobile);
    mainPanel.removeAll();
    mainPanel.add(profilepanel);
    mainPanel.revalidate();
    mainPanel.repaint();
    }//GEN-LAST:event_btnMyProfileActionPerformed

    
    public List<Book> fetchBooksBoughtByUser(int userId) {
    List<Book> books = new ArrayList<>();

    try (Connection conn = DriverManager.getConnection(
        "jdbc:sqlserver://localhost:1433;databaseName=LibraryManagement;encrypt=true;trustServerCertificate=true",
        "raksha2", "1234")) {

        String sql = "SELECT DISTINCT b.id, b.title, b.author, b.price,b.quantity,b.genre,b.isbn,b.description, bi.image_data " +
                     "FROM books_bought bb " +
                     "JOIN books b ON bb.book_id = b.id " +
                     "JOIN book_images bi ON bi.book_id = b.id " +
                     "WHERE bb.user_id = ?"+
                      "ORDER BY b.id Desc";

        PreparedStatement ps = conn.prepareStatement(sql);
        ps.setInt(1, userId);
        ResultSet rs = ps.executeQuery();

        while (rs.next()) {
            BrowseBooks browsebooks=new BrowseBooks(mainPanel,userId);
           BrowseBooks.Book book = browsebooks.new Book(
             rs.getInt("id"),
             rs.getInt("quantity"),
             rs.getString("author"),

             rs.getString("title"),
             rs.getString("genre"),
             rs.getString("isbn"),
             rs.getString("image_data"),
             rs.getString("description"),

             rs.getFloat("price")
            );
             

            books.add(book);
        }

    } catch (Exception e) {
        e.printStackTrace();
    }

    return books;
}

    
    public List<Book> fetchIssuedBooksByUser(int userId) {
    List<Book> books = new ArrayList<>();
    try (Connection conn = getConnection()) {
        String sql = "SELECT DISTINCT b.id, b.title, b.author, b.genre, b.price, b.isbn, b.description, bi.image_data, b.quantity " +
                     "FROM issued_books ib " +
                     "JOIN books b ON ib.book_id = b.id " +
                     "JOIN book_images bi ON bi.book_id = b.id " +
                     "WHERE ib.user_id = ?";
        PreparedStatement ps = conn.prepareStatement(sql);
        ps.setInt(1, userId);
        ResultSet rs = ps.executeQuery();
        while (rs.next()) {
            BrowseBooks browsebooks=new BrowseBooks(mainPanel,userId);
           BrowseBooks.Book book = browsebooks.new Book(
             rs.getInt("id"),
             rs.getInt("quantity"),
             rs.getString("author"),

             rs.getString("title"),
             rs.getString("genre"),
             rs.getString("isbn"),
             rs.getString("image_data"),
             rs.getString("description"),

             rs.getFloat("price")
            );
            books.add(book);
        }
    } catch (Exception e) {
        e.printStackTrace();
    }
    return books;
}

    
    //List<Book>books=new ArrayList<>();
    private void btnMyBooksActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMyBooksActionPerformed
       List<Book>books=fetchBooksBoughtByUser(userId);
        mybooks mb=new mybooks(books,userId,mainPanel);
        mainPanel.removeAll();
        mainPanel.setLayout(new BorderLayout());
        mainPanel.add(mb);
        mainPanel.revalidate();
        mainPanel.repaint();
        
    }//GEN-LAST:event_btnMyBooksActionPerformed

    /**
     * @param args the command line arguments
     */
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBrowseBooks;
    private javax.swing.JButton btnIssuedBooks;
    private javax.swing.JButton btnLogout;
    private javax.swing.JButton btnMyBooks;
    private javax.swing.JButton btnMyProfile;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JPanel sidePanel;
    // End of variables declaration//GEN-END:variables
}
